{"version":3,"sources":["redux/todoSlice.js","redux/loginSlice.js","components/LoginModal.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","pageNumber","a","fetch","resp","ok","json","todos","updateTodoAsync","thunkAPI","id","updatedFields","state","getState","accessToken","login","method","headers","body","JSON","stringify","todo","Error","addTodoAsync","payload","username","email","task_text","status","toggleCompleteAsync","completed","deleteTodoAsync","todoSlice","createSlice","name","initialState","results","reducers","addTodo","action","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","fulfilled","actions","loginAsync","credentials","response","data","access_token","logoutAsync","_","Authorization","message","loginSlice","error","builder","addCase","rejected","selectAccessToken","selectLoginError","LoginModal","isOpen","onRequestClose","useState","setUsername","password","setPassword","loginError","useSelector","dispatch","useDispatch","onClick","onSubmit","event","preventDefault","type","value","onChange","target","className","AddTodoForm","values","setValues","emailError","setEmailError","isLoginModalOpen","setIsLoginModalOpen","handleLogout","console","test","placeholder","onLoginSuccess","TodoItem","isAuthenticated","onUpdate","edited","editableTaskText","setEditableTaskText","editableStatus","setEditableStatus","TodoList","currentPage","setCurrentPage","useEffect","field","order","sortBy","setSortBy","filteredTodos","usernameMatch","includes","taskTextMatch","emailMatch","sortedTodos","sort","b","fieldA","toLowerCase","fieldB","handleUpdateTodo","actionResult","match","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","e","map","disabled","total_pages","App","configureStore","reducer","loginReducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.785b1b23.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync (pageNumber) => {\r\n\t\tconst resp = await fetch(`https://backend-flask-fd7d.onrender.com/api?page=${pageNumber}`);\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const updateTodoAsync = createAsyncThunk(\r\n\t'todos/updateTodoAsync',\r\n\tasync ({ id, ...updatedFields }, thunkAPI) => {\r\n\t\tconst state = thunkAPI.getState();\r\n\t\tconst accessToken = state.login.accessToken;\r\n\r\n\t\tconst resp = await fetch(`https://backend-flask-fd7d.onrender.com/api/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': `Bearer ${accessToken}`,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(updatedFields),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { id, todo };\r\n\t\t} else {\r\n\t\t\tthrow new Error('Todo update failed');\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n\t'todos/addTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('https://backend-flask-fd7d.onrender.com/api', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ username: payload.username,\r\n\t\t\t\t\t\t\temail: payload.email,\r\n\t\t\t\t\t\t\ttask_text: payload.task_text,\r\n\t\t\t\t\t\t\tstatus: false}),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n\t'todos/completeTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`https://backend-flask-fd7d.onrender.com/api/${payload.id}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ completed: payload.completed }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n\t'todos/deleteTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`https://backend-flask-fd7d.onrender.com/api/${payload.id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\treturn { id: payload.id };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos',\r\n\tinitialState: {results: []},\r\n\treducers: {\r\n\t\taddTodo: (state, action) => {\r\n\t\t\tconst todo = {\r\n\t\t\t\tusername: action.payload.username,\r\n\t\t\t\temail: action.payload.email,\r\n\t\t\t\ttask_text: action.payload.task_text,\r\n\t\t\t\tstatus: false,\r\n\t\t\t};\r\n\t\t\tstate.results.push(todo);\r\n\t\t},\r\n\t\ttoggleComplete: (state, action) => {\r\n\t\t\tconst index = state.findIndex((todo) => todo.id === action.payload.id);\r\n\t\t\tstate[index].status = action.payload.status;\r\n\t\t},\r\n\t\tdeleteTodo: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n\t\t[addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.results.push(action.payload.todo);\r\n\t\t},\r\n\t\t[toggleCompleteAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.findIndex(\r\n\t\t\t\t(todo) => todo.id === action.payload.todo.id\r\n\t\t\t);\r\n\t\t\tstate[index].completed = action.payload.todo.completed;\r\n\t\t},\r\n\t\t[updateTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.results.findIndex((todo) => todo.id === action.payload.id);\r\n\t\t\tstate[index] = action.payload.todo;\r\n\t\t},\r\n\t\t[deleteTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","// loginSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Replace with your API endpoint\r\nconst LOGIN_API_ENDPOINT = 'https://backend-flask-fd7d.onrender.com/api/login';\r\n\r\nexport const loginAsync = createAsyncThunk('login/loginAsync', async (credentials) => {\r\n  const response = await fetch(LOGIN_API_ENDPOINT, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    return data.access_token;\r\n  } else {\r\n    throw new Error('Login failed');\r\n  }\r\n});\r\n\r\nexport const logoutAsync = createAsyncThunk('login/logoutAsync', async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const accessToken = state.login.accessToken;\r\n  \r\n    if (!accessToken) {\r\n      throw new Error('No access token found');\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('https://backend-flask-fd7d.onrender.com/api/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.message || 'Logout failed');\r\n      }\r\n  \r\n      return true; // Return a success flag if logout is successful\r\n    } catch (error) {\r\n      throw new Error('Logout failed');\r\n    }\r\n  });\r\n\r\nexport const logout = () => {\r\n    // You can perform any additional cleanup here if needed\r\n    return { type: 'login/logout' };\r\n  };\r\n  \r\n\r\nconst loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState: {\r\n    accessToken: null,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginAsync.fulfilled, (state, action) => {\r\n        state.accessToken = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginAsync.rejected, (state, action) => {\r\n        state.accessToken = null;\r\n        state.error = action.error.message;\r\n     \r\n      })\r\n      .addCase(logoutAsync.fulfilled, (state) => {\r\n        state.accessToken = null;\r\n        state.error = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport default loginSlice.reducer;\r\nexport const selectAccessToken = (state) => state.login.accessToken;\r\nexport const selectLoginError = (state) => state.login.error;\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginAsync, selectLoginError, selectAccessToken, logoutAsync } from '../redux/loginSlice';\r\n\r\nconst LoginModal = ({ isOpen, onRequestClose }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const loginError = useSelector(selectLoginError);\r\n  const accessToken = useSelector(selectAccessToken);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(loginAsync({ username, password }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutAsync());\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onRequestClose={onRequestClose}>\r\n      <h2>Login</h2>\r\n      {accessToken ? (\r\n        <div>\r\n          <p>You are logged in.</p>\r\n          <button onClick={handleLogout}>Logout</button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Username:\r\n            <input\r\n              type='text'\r\n              value={username}\r\n              onChange={(event) => setUsername(event.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type='password'\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n            />\r\n          </label>\r\n          {loginError && <p className=\"error\">{loginError}</p>}\r\n          <button type='submit'>Login</button>\r\n        </form>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodoAsync } from '../redux/todoSlice';\r\nimport LoginModal from './LoginModal';\r\nimport { selectAccessToken, logoutAsync } from '../redux/loginSlice';\r\n\r\nconst AddTodoForm = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    task_text: '',\r\n  });\r\n\r\n  const [emailError, setEmailError] = useState('');\r\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\r\n  const accessToken = useSelector(selectAccessToken);\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (values.username && validateEmail(values.email) && values.task_text) {\r\n      dispatch(addTodoAsync(values));\r\n    } else {\r\n      setEmailError('Invalid email format');\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsLoginModalOpen(false);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n\ttry {\r\n\t  await dispatch(logoutAsync());\r\n\t  // Handle successful logout, such as redirecting or showing a message\r\n\t} catch (error) {\r\n\t  console.error('Logout failed:', error.message);\r\n\t  // Handle logout failure, such as showing an error message\r\n\t}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {accessToken ? (\r\n        <div>\r\n          <p>You are logged in.</p>\r\n          <button\r\n            type='button'\r\n            className='btn btn-primary mb-2'\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n          <input\r\n            type='text'\r\n            className='form-control mb-2 mr-sm-2'\r\n            placeholder='Username'\r\n            value={values.username}\r\n            onChange={(event) =>\r\n              setValues({ ...values, username: event.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type='email'\r\n            className='form-control mb-2 mr-sm-2'\r\n            placeholder='Email'\r\n            value={values.email}\r\n            onChange={(event) => {\r\n              setValues({ ...values, email: event.target.value });\r\n              setEmailError('');\r\n            }}\r\n          />\r\n          {emailError && <div className=\"invalid-feedback\">{emailError}</div>}\r\n          <input\r\n            type='text'\r\n            className='form-control mb-2 mr-sm-2'\r\n            placeholder='Task Text'\r\n            value={values.task_text}\r\n            onChange={(event) =>\r\n              setValues({ ...values, task_text: event.target.value })\r\n            }\r\n          />\r\n          <button type='submit' className='btn btn-primary mb-2'>\r\n            Submit\r\n          </button>\r\n          <button\r\n            type='button'\r\n            className='btn btn-primary mb-2 ml-4'\r\n            onClick={() => setIsLoginModalOpen(true)}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      )}\r\n      <LoginModal\r\n        isOpen={isLoginModalOpen}\r\n        onRequestClose={() => setIsLoginModalOpen(false)}\r\n        onLoginSuccess={handleLoginSuccess}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst TodoItem = ({ id, username, task_text, email, status, isAuthenticated, onUpdate, edited }) => {\r\n  const [editableTaskText, setEditableTaskText] = useState(task_text);\r\n  const [editableStatus, setEditableStatus] = useState(status);\r\n\r\n  const handleTaskTextChange = (event) => {\r\n    setEditableTaskText(event.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    setEditableStatus(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    onUpdate(id, { task_text: editableTaskText, status: editableStatus });\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{username}</td>\r\n      <td>{email}</td>\r\n      <td>\r\n        {isAuthenticated ? (\r\n          <>\r\n            <input\r\n              type='text'\r\n              value={editableTaskText}\r\n              onChange={handleTaskTextChange}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {task_text}\r\n            {edited && <small className=\"text-muted ml-1\">edited by admin</small>}\r\n          </>\r\n        )}\r\n      </td>\r\n      <td>\r\n        {isAuthenticated ? (\r\n          <select value={editableStatus} onChange={handleStatusChange}>\r\n            <option value=\"false\">In Progress</option>\r\n            <option value=\"true\">Completed</option>\r\n          </select>\r\n        ) : (\r\n          status ? (\"Completed\") : (\"In progress\")\r\n        )}\r\n      </td>\r\n      {isAuthenticated && (\r\n        <td>\r\n          <button className='btn btn-primary' onClick={handleSubmit}>\r\n            Update\r\n          </button>\r\n        </td>\r\n      )}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTodosAsync, updateTodoAsync } from '../redux/todoSlice';\r\nimport { selectAccessToken } from '../redux/loginSlice';\r\nimport TodoItem from './TodoItem';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos);\r\n  const accessToken = useSelector(selectAccessToken);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodosAsync(currentPage));\r\n  }, [dispatch, currentPage]);\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const [filter] = useState({\r\n    username: '',\r\n    task_text: '',\r\n    email: '',\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState({\r\n    field: 'username', // Default sort field\r\n    order: 'asc',     // Default sort order\r\n  });\r\n\r\n  // Check if todos.results is defined before filtering and sorting\r\n  const filteredTodos = todos && todos.results && todos.results.filter((todo) => {\r\n    const usernameMatch = !filter.username || todo.username.includes(filter.username);\r\n    const taskTextMatch = !filter.task_text || todo.task_text.includes(filter.task_text);\r\n    const emailMatch = !filter.email || todo.email.includes(filter.email);\r\n\r\n    return usernameMatch && taskTextMatch && emailMatch;\r\n  });\r\n\r\n  // Check if filteredTodos is defined before sorting\r\n  const sortedTodos = filteredTodos && [...filteredTodos].sort((a, b) => {\r\n    const fieldA = a[sortBy.field]?.toLowerCase() || ''; // Check if property exists, use an empty string as a fallback\r\n    const fieldB = b[sortBy.field]?.toLowerCase() || ''; // Check if property exists, use an empty string as a fallback\r\n\r\n    if (fieldA < fieldB) {\r\n      return sortBy.order === 'asc' ? -1 : 1;\r\n    }\r\n    if (fieldA > fieldB) {\r\n      return sortBy.order === 'asc' ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const handleUpdateTodo = async (id, updatedFields) => {\r\n    if (accessToken) {\r\n      try {\r\n        const actionResult = await dispatch(updateTodoAsync({ id, ...updatedFields }));\r\n        if (updateTodoAsync.fulfilled.match(actionResult)) {\r\n          toast.success('Todo updated successfully', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to update todo:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row my-4'>\r\n        <div className='col-md-12'>\r\n          <div className='sort-options'>\r\n            {/* Sort by field */}\r\n            <label className='mr-2'>\r\n              Sort by:\r\n              <select\r\n                className='form-control-sm ml-1'\r\n                value={sortBy.field}\r\n                onChange={(e) => setSortBy({ ...sortBy, field: e.target.value })}\r\n              >\r\n                <option value='username'>Username</option>\r\n                <option value='email'>Email</option>\r\n                <option value='task_text'>Task Text</option>\r\n              </select>\r\n            </label>\r\n            {/* Sort order */}\r\n            <label>\r\n              Order:\r\n              <select\r\n                className='form-control-sm ml-1'\r\n                value={sortBy.order}\r\n                onChange={(e) => setSortBy({ ...sortBy, order: e.target.value })}\r\n              >\r\n                <option value='asc'>Ascending</option>\r\n                <option value='desc'>Descending</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <table className='table'>\r\n            <thead>\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Task Text</th>\r\n                <th>Status</th>\r\n                {accessToken && <th>Action</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortedTodos && sortedTodos.map((todo) => (\r\n                <TodoItem\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  username={todo.username}\r\n                  task_text={todo.task_text}\r\n                  email={todo.email}\r\n                  status={todo.status}\r\n                  edited={todo.edited}\r\n                  isAuthenticated={!!accessToken}\r\n                  onUpdate={handleUpdateTodo}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className='row my-4'>\r\n        <div className='col-md-12'>\r\n          <div className='pagination'>\r\n            <button\r\n              className='btn btn-primary mr-2'\r\n              disabled={currentPage === 1}\r\n              onClick={handlePreviousPage}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              className='btn btn-primary'\r\n              disabled={!todos || currentPage === todos.total_pages}\r\n              onClick={handleNextPage}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\n//import TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\nimport loginReducer from './loginSlice';\r\n\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tlogin: loginReducer,\r\n\t\ttodos: todoReducer,\r\n\t},\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}