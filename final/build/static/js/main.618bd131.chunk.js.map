{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","username","email","task_text","status","todo","toggleCompleteAsync","completed","deleteTodoAsync","id","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","fulfilled","actions","AddTodoForm","useState","values","setValues","emailError","setEmailError","dispatch","useDispatch","onSubmit","event","preventDefault","test","className","type","placeholder","value","onChange","target","TodoItem","checked","TodoList","useSelector","useEffect","setFilter","field","order","sortBy","setSortBy","filteredTodos","usernameMatch","includes","taskTextMatch","emailMatch","sortedTodos","sort","b","fieldA","toLowerCase","fieldB","e","map","TotalCompleteItems","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.618bd131.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync () => {\r\n\t\tconst resp = await fetch('https://backend-flask-todo.onrender.com/api');\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n\t'todos/addTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('https://backend-flask-todo.onrender.com/api', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ username: payload.username,\r\n\t\t\t\t\t\t\temail: payload.email,\r\n\t\t\t\t\t\t\ttask_text: payload.task_text,\r\n\t\t\t\t\t\t\tstatus: false}),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n\t'todos/completeTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('https://backend-flask-todo.onrender.com/api/${payload.id}', {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ completed: payload.completed }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n\t'todos/deleteTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('https://backend-flask-todo.onrender.com/api/${payload.id}', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\treturn { id: payload.id };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos',\r\n\tinitialState: [],\r\n\treducers: {\r\n\t\taddTodo: (state, action) => {\r\n\t\t\tconst todo = {\r\n\t\t\t\tusername: action.payload.username,\r\n\t\t\t\temail: action.payload.email,\r\n\t\t\t\ttask_text: action.payload.task_text,\r\n\t\t\t\tstatus: false,\r\n\t\t\t};\r\n\t\t\tstate.push(todo);\r\n\t\t},\r\n\t\ttoggleComplete: (state, action) => {\r\n\t\t\tconst index = state.findIndex((todo) => todo.id === action.payload.id);\r\n\t\t\tstate[index].status = action.payload.status;\r\n\t\t},\r\n\t\tdeleteTodo: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n\t\t[addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.push(action.payload.todo);\r\n\t\t},\r\n\t\t[toggleCompleteAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.findIndex(\r\n\t\t\t\t(todo) => todo.id === action.payload.todo.id\r\n\t\t\t);\r\n\t\t\tstate[index].completed = action.payload.todo.completed;\r\n\t\t},\r\n\t\t[deleteTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodoAsync } from '../redux/todoSlice';\r\n\r\nconst AddTodoForm = () => {\r\n\tconst [values, setValues] = useState({\r\n\t\tusername: '',\r\n\t\temail: '',\r\n\t\ttask_text: '',\r\n\t  });\r\n\r\n\tconst [emailError, setEmailError] = useState('');\r\n\t\r\n\tconst validateEmail = (email) => {\r\n\tconst re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\treturn re.test(email);\r\n\t};\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tif (\r\n\t\t  values.username &&\r\n\t\t  validateEmail(values.email) && // Validate email format\r\n\t\t  values.task_text\r\n\t\t) {\r\n\t\t  dispatch(addTodoAsync(values));\r\n\t\t} else {\r\n\t\t  setEmailError('Invalid email format');\r\n\t\t}\r\n\t  };\r\n\t\r\n\t\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Username'\r\n\t\t\t\tvalue={values.username}\r\n\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\tsetValues({ ...values, username: event.target.value })\r\n\t\t\t\t}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\ttype='email'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Email'\r\n\t\t\t\tvalue={values.email}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetValues({ ...values, email: event.target.value });\r\n\t\t\t\t\tsetEmailError(''); // Clear email error when input changes\r\n\t\t\t\t  }}\r\n\t\t\t\t/>\r\n\t\t\t\t{emailError && <div className=\"invalid-feedback\">{emailError}</div>}\r\n\r\n\t\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Task Text'\r\n\t\t\t\tvalue={values.task_text}\r\n\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\tsetValues({ ...values, task_text: event.target.value })\r\n\t\t\t\t}\r\n\t\t\t\t/>\r\n\r\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t\t<button type='button' className='btn btn-primary mb-2 ml-4'>\r\n\t\t\t\tLogin\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst TodoItem = ({ username,email, task_text, status }) => {\r\n\r\n\treturn (\r\n\t\t\t\t<tr>\r\n\t\t\t\t<td>{username}</td>\r\n\t\t\t\t<td>{email}</td>\r\n\t\t\t\t<td>{task_text}</td>\r\n\t\t\t\t<td><input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tclassName='mr-3'\r\n\t\t\t\t\t\tchecked={status}\r\n\t\t\t\t\t></input></td>\r\n\t\t\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTodosAsync } from '../redux/todoSlice';\r\n\r\nconst TodoList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst todos = useSelector((state) => state.todos);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getTodosAsync());\r\n\t}, [dispatch]);\r\n\r\n\tconst [filter, setFilter] = useState({\r\n\t\tusername: '',\r\n\t\ttask_text: '',\r\n\t\temail: '',\r\n\t});\r\n\r\n\tconst [sortBy, setSortBy] = useState({\r\n\t\tfield: 'username', // Default sort field\r\n\t\torder: 'asc',     // Default sort order\r\n\t});\r\n\r\n\tconst filteredTodos = todos.filter(todo => {\r\n\t\tconst usernameMatch = !filter.username || todo.username.includes(filter.username);\r\n\t\tconst taskTextMatch = !filter.task_text || todo.task_text.includes(filter.task_text);\r\n\t\tconst emailMatch = !filter.email || todo.email.includes(filter.email);\r\n\t  \r\n\t\treturn usernameMatch && taskTextMatch && emailMatch;\r\n\t  });\r\n\r\n\tconst sortedTodos = [...filteredTodos].sort((a, b) => {\r\n\t\tconst fieldA = a[sortBy.field]?.toLowerCase() || ''; // Check if property exists, use an empty string as a fallback\r\n\t\tconst fieldB = b[sortBy.field]?.toLowerCase() || ''; // Check if property exists, use an empty string as a fallback\r\n\t  \r\n\t\tif (fieldA < fieldB) {\r\n\t\t  return sortBy.order === 'asc' ? -1 : 1;\r\n\t\t}\r\n\t\tif (fieldA > fieldB) {\r\n\t\t  return sortBy.order === 'asc' ? 1 : -1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t  });\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getTodosAsync());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row my-4'>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<div className='filters'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control mb-2'\r\n\t\t\t\t\t\t\tplaceholder='Filter by Username'\r\n\t\t\t\t\t\t\tvalue={filter.username}\r\n\t\t\t\t\t\t\tonChange={(e) => setFilter({ ...filter, username: e.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control mb-2'\r\n\t\t\t\t\t\t\tplaceholder='Filter by Task Text'\r\n\t\t\t\t\t\t\tvalue={filter.task_text}\r\n\t\t\t\t\t\t\tonChange={(e) => setFilter({ ...filter, task_text: e.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control mb-2'\r\n\t\t\t\t\t\t\tplaceholder='Filter by Email'\r\n\t\t\t\t\t\t\tvalue={filter.email}\r\n\t\t\t\t\t\t\tonChange={(e) => setFilter({ ...filter, email: e.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Username</th>\r\n\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t<th>Task Text</th>\r\n\t\t\t\t\t\t\t\t<th>Completed</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{sortedTodos.map((todo) => (\r\n\t\t\t\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\t\t\tid={todo.id}\r\n\t\t\t\t\t\t\t\t\tusername={todo.username}\r\n\t\t\t\t\t\t\t\t\ttask_text={todo.task_text}\r\n\t\t\t\t\t\t\t\t\temail={todo.email}\r\n\t\t\t\t\t\t\t\t\tstatus={todo.status}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row my-4'>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<div className='sort-options'>\r\n\t\t\t\t\t\t<label className='mr-2'>\r\n\t\t\t\t\t\t\tSort by:\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName='form-control-sm ml-1'\r\n\t\t\t\t\t\t\t\tvalue={sortBy.field}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetSortBy({ ...sortBy, field: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value='username'>Username</option>\r\n\t\t\t\t\t\t\t\t<option value='email'>Email</option>\r\n\t\t\t\t\t\t\t\t<option value='task_text'>Task Text</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\tOrder:\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName='form-control-sm ml-1'\r\n\t\t\t\t\t\t\t\tvalue={sortBy.order}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetSortBy({ ...sortBy, order: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value='asc'>Ascending</option>\r\n\t\t\t\t\t\t\t\t<option value='desc'>Descending</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TotalCompleteItems = () => {\r\n\tconst todos = useSelector((state) =>\r\n\t\tstate.todos.filter((todo) => todo.status === true)\r\n\t);\r\n\r\n\treturn <h4 className='mt-3'>Total complete items: {todos.length}</h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\ttodos: todoReducer,\r\n\t},\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}